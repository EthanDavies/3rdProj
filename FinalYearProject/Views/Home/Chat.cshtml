@{
    ViewBag.Title = "Chat";
}

@model List<string>
<h1>Chat Room</h1>

<a href="javascript:void(0);" onclick="changeFontSize('content', '2')">
            Increase font
</a>


<div class="form-group col-xl-12">
    <label id="label2">Conversation</label>
    <div class="container chatArea" style="overflow:scroll;height:200px;width:100%;overflow:auto">
        <input type="hidden" id="displayname" value=@Model[0].ToString() />
        <ul id="discussion">
            
        </ul>
    </div>
    
    <br />
    <label id="label1">Type here!</label><br />
    <textarea class="form-control" rows="4" cols="40" id="message" placeholder="Share what's in your mind...">
     
    </textarea>

    
    
   
    <br />
    <table>
        <tr>
            <td>
                <input type="button" class="btn btn-primary" id="sendmessage" value="Send" />
            </td>
            <td>
                <img onclick="startDictationChat()" src="//i.imgur.com/cHidSVu.gif" />
            </td>
        </tr>
    </table>
    <form id="labnol1">
        <div class="speech">
            <input type="hidden" name="q2" id="transcript" placeholder="Speak"/>
        </div>
    </form>
    <br />
    
</div>

<p id="content" style="font-size:12px">Test text</p>


@section scripts {
    <link href="~/Content/sweetalert.css" rel="stylesheet" />
    <script type="text/javascript">
        function changeFontSize(element, step) {
            step = parseInt(step, 10);
            var el = document.getElementById(element);
            var curFont = parseInt(el.style.fontSize, 10);
            el.style.fontSize = (curFont + step) + 'px';
        }
    </script>
    <script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Content/sweetalert.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>


        $(function () {

            window.onbeforeunload = function (e) {
                chat.server.send($('#displayname').val(), "has left the chat room");
            }

            var chat = $.connection.chatHub;
            chat.client.addNewMessageToPage = function (name, message) {
                $('#discussion').prepend('<ul><li>' + htmlEncode(name) + '  ' + '<strong style="color:black;font-style:normal;font-size:medium;text-transform:lowercase">:</strong>'
                     + '<a id="message-speak">' + " " + message + '</a>' + '</li></ul>');
                
                function speakMessage() {
                    speak(htmlEncode(name) + "said: " + (message));
                };

                document.getElementById('message-speak').onclick = function () {
                    speakMessage();
                };

            };

            
            swal({
                title: "Username",
                text: "Would you like to use a nickname or your username for the chat?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, use a new nickname!",
                cancelButtonText: "No, stick with my username!",
                closeOnConfirm: false,
                closeOnCancel: false,
                allowEscapeKey: true,
                allowOutsideClick: true,
                animation: "slide-from-top"
            },
            function (isConfirm) {
                if (isConfirm) {
                    swal({
                        title: "Nickname",
                        text: "Please enter a username or a nickname for the chat room: ",
                        type: "input",
                        closeOnConfirm: false,
                        animation: "slide-from-top",
                        inputPlaceholder: "Enter a nickname"
                    },
                    function (inputValue) {
                        if (inputValue === false) return false;

                        if (inputValue === "") {
                            swal.showInputError("You need to enter a nickname!");
                            return false
                        }

                        swal("Nice!", "Your username: " + inputValue, "success");
                        $('#displayname').val(inputValue);
                        chat.server.send($('#displayname').val(), "I have joined the chat room under a nickname");
                    });
                } else {
                    swal("Nice!", "Using your application username!", "success");
                    $('#displayname').val();
                    chat.server.send($('#displayname').val(), "I Have joined the chat room");
                }
            });



            $('#message').focus();
            $.connection.hub.start().done(function () {
                chat.server.send()
                $('#sendmessage').click(function () {
                    chat.server.send($('#displayname').val(), $('#message').val());
                    $('#message').val('').focus();
                });
            });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }


    </script>
<script type="text/javascript">

// say a message
    function speak(text, callback) {
        var u = new SpeechSynthesisUtterance();
        u.text = text;
        u.lang = 'en-US';
        u.onend = function () {
            if (callback) {
                callback();
            }
        };

        u.onerror = function (e) {
            if (callback) {
                callback(e);
            }
        };
        speechSynthesis.speak(u);
    };
</script>
<script>
    function startDictationChat() {

        if (window.hasOwnProperty('webkitSpeechRecognition')) {

            var recognition = new webkitSpeechRecognition();

            recognition.continuous = false;
            recognition.interimResults = false;

            recognition.lang = "en-US";
            recognition.start();

            

            recognition.onresult = function(e) {
                document.getElementById('transcript').value
                                         = e.results[0][0].transcript;
                recognition.stop();
               
                if (document.getElementById('transcript').value == null) {
                    swal({
                        type: "error",
                        title: "We didn't catch that!",
                        text: "Try again to dictate your speech",
                        timer: 2000,
                        showConfirmButton: false
                    });
                    window.location.href = 'http://localhost:59658/Blog/Index';
                } else {
                    swal({
                        type: "success",
                        title: "Loud and Clear!",
                        text: "You Said: " + document.getElementById('transcript').value,
                        timer: 2000,
                        showConfirmButton: false
                    });
                    document.getElementById('message').value = document.getElementById('transcript').value;
                }
                
            };

            recognition.onerror = function(e) {
                recognition.stop();
            }

        }
    }
</script>
}